buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'budda'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.batch:spring-batch-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //spring-batch-integration
    implementation 'org.springframework.batch:spring-batch-integration'

    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.13.0'
    //apache poi
    implementation group: 'org.apache.poi', name: 'poi', version: '5.2.5'

    // https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.2.5'

    //querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // https://mvnrepository.com/artifact/org.hibernate.orm/hibernate-spatial
    implementation group: 'org.hibernate.orm', name: 'hibernate-spatial', version: '6.6.1.Final'
    testImplementation "org.testcontainers:testcontainers:1.20.4"
    testImplementation "org.testcontainers:junit-jupiter:1.20.4"
    testImplementation "org.testcontainers:mysql:1.20.4"

    //kafka
    implementation 'org.springframework.kafka:spring-kafka'
}

tasks.named('test') {
    useJUnitPlatform()
}

// QueryDSL
def queryDslDir = "src/main/generated/queryDsl"
clean {
    delete file(queryDslDir)
}

tasks.register('CodeIntegrationTest', Test) {
    group = 'verification'
    description = 'Runs the CI tests.'
    useJUnitPlatform {
        excludeTags 'BATCH_TEST'
    }
}

jar {
    enabled = false
}
